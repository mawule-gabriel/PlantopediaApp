name: Build and Push to ECR

on:
  push:
    branches: [ main ]


jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build, tag, and push Docker image to Amazon ECR
        id: image
        env:
          ECR_REGISTRY: public.ecr.aws/j1n7u2e7
          ECR_REPOSITORY: plantrepo
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest  .

          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT


      - name: Update the ECS Task definition
        id: task-defn
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ImageDefinition.json
          container-name: plantrepo
          image: ${{ steps.image.outputs.image }}
      - name: Automatic Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-defn.outputs.task-definition }}
          service: myNewPlantService
          cluster: PlantCluster
          wait-for-service-stability: true